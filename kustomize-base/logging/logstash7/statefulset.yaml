---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logstash-cluster
  namespace: logging
spec:
  containers:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  serviceName: logstash-cluster
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9198"
        prometheus.io/scrape: "true"
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.6.2 
          ports:
            - containerPort: 9600
              name: monitor
              protocol: TCP
            - containerPort: 5044
              name: beats
              protocol: TCP

          env:
            - name: FILEBEAT_PASS
              valueFrom:
                secretKeyRef:
                  key: filebeat-pass
                  name: filebeat-pass
            - name: XPACK_MONITORING_ENABLED
              value: "false" 
            - name: HTTP_HOST
              value: 0.0.0.0
            - name: HTTP_PORT
              value: "9600"
            - name: ELASTICSEARCH_HOST
              value: "https://ha-es-http.elasticsearch.svc:9200" 
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: CONFIG_RELOAD_AUTOMATIC
              value: "true"
            - name: PATH_CONFIG
              value: /usr/share/logstash/pipeline
            - name: PATH_DATA
              value: /usr/share/logstash/data
            - name: QUEUE_CHECKPOINT_WRITES
              value: "180000"
            - name: QUEUE_DRAIN
              value: "true"
            - name: QUEUE_MAX_BYTES
              value: 9gb
            - name: QUEUE_TYPE
              value: persisted
            - name: PIPELINE_WORKERS
              value: "3"
            - name: PIPELINE_BATCH_SIZE
              value: "1024"
            - name: RESTART_ME
              value: "Increment the counter in this string to restart Deployment [COUNTER:14]"
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: monitor
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: monitor
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30

          volumeMounts:
            - mountPath: /usr/share/logstash/data
              name: logstash-data
            - mountPath: /usr/share/logstash/pipeline
              name: logstash-pipeline
            - mountPath: /usr/share/logstash/config/jvm.options
              subPath: jvm.options
              name: logstash-jvm-options
            - mountPath: /usr/share/logstash/config/ssl
              name: ha-es-http-certs-public
              readOnly: true
      securityContext:
        fsGroup: 1000
        runAsUser: 1000

      nodeSelector:
        workload: default
      tolerations:
      - key: workload
        operator: Equal
        value: default
        effect: NoSchedule

      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: size
                operator: In
                values:
                - med
      volumes:
        - name: logstash-pipeline
          configMap:
            name: logstash-cluster-pipeline
        - name: logstash-jvm-options 
          configMap:
            name: logstash-cluster-jvm-options 
        - name: ha-es-http-certs-public
          secret: 
           secretName: ha-es-http-certs-public 

  volumeClaimTemplates:
    - metadata:
        name: logstash-data
      spec:
        storageClassName: logstash-ssd 
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi

